{"utilities":{},"programModules":{"EXT100MI":{"program":"EXT100MI","triggers":{},"transactions":{"AddShpDocument":{"sourceUuid":"59552bfb-565c-4ace-97e2-f9b0027680f1","name":"AddShpDocument","program":"EXT100MI","description":"Attach document to the shipment","active":true,"multi":false,"modified":1650293435021,"modifiedBy":"RASANA","outputFields":[{"name":"MBOL","description":"Master Bill Of Lading Number","length":17,"mandatory":false,"type":"A"}],"inputFields":[{"name":"CONN","description":"Shipment","length":7,"mandatory":true,"type":"A"},{"name":"DONR","description":"Document Number","length":3,"mandatory":true,"type":"A"},{"name":"DOVA","description":"Document Variant","length":2,"mandatory":true,"type":"A"}],"utilities":[]}},"batches":{}}},"sources":{"59552bfb-565c-4ace-97e2-f9b0027680f1":{"uuid":"59552bfb-565c-4ace-97e2-f9b0027680f1","updated":1650350739502,"updatedBy":"RASANA","created":1650292848478,"createdBy":"RASANA","apiVersion":"0.9","beVersion":"16.0.0.20220217170023","codeHash":"AB2240307FACCBE721C0BC72177CD49E400D565CDBE5BA9C0DFD9A9541B270AB","code":""}}}